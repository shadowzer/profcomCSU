ВЕЗДЕ НЕ ЗАБУДЬ ПРО ТО ЧТО ПОРТ ПРИ ЛОКАЛХОСТЕ НАДО УКАЗАТЬ!!!


Действие: авторизация
Вход: String логин, String захешированный MD5 пароль
Выход: совпала пара логин-пароль или нет? int код ответа, к примеру:
айдишник пользователя - получилось,
-1 - неверный пароль,
-2 - несуществующий логин

GET запрос по адресу localhost/Password/login/password
+++


Действие: регистрация
Вход: String логин, String Ф,И,О, bool бюджет/платник, bool очка/заочка, String  пароль
Выход: получилось ли зарегистрировать пользователя? int код ответа, к примеру: 0 - получилось, 
		1 - такой логин уже зарегистрирован и т.д.
//мой вариант решения:
1) GET запрос localhost/Password/login который вернет либо объект типа password(login,password,idUser) либо вернет null значит можно регать этот логин
2) POST запрос  localhost/User , внутри запроса лежит объект типа User в JSON формате,
ответом будет во первых код ответа 200 во вторых в теле ответа будет лежать точно такой же вставленный User(id генерируется на сервере поэтому может отличаться от присланного и его можно не указывать)
3) из ответа на запрос в пункте 2 получаем id User и генерим в JSON формате объект типа Password(login,password,idUser) отправляем его на localhost/Password постом
если успех тогда все гуд пользователь зарегался и берешь из ответа от пассворда юзер айди если нет то Delete запросом вставленную запись в пункте 2 надо удалить
+++
		
Действие: получение всего списка категорий новостей
Вход: -
Выход: ArrayList<String> названия категорий новостей
//мой вариант
Выход: ArrayList<Category> названия категорий новостей
так как категории надо как то идентифицировать то им нужен айдишник поэтому класс Category has 2 fields: id,name
получение всех категорий происходит запросом localhost/Category


Действие: получение списка категорий новостей, на которые подписан пользователь
Вход: String userID
Выход: ArrayList<String> названия категорий новостей
// мой вариант решения
Выход: ArrayList<Category> так как категории нужно идентифицировать
localhost/UserCategory/{Uid}
+++

Действие: обновление списка категорий новостей, на которые пользователь подписан
Вход: String userID, ArrayList<String> названия категорий новостей
Выход: получилось ли обновить список категорий новостей пользователя? int код ответа
1)GET запрос localhost/UserCategory/{Uid}/{Cid}    верет false если нет записи в которой у поьзователя с id-Uid есть связь с категорие с id-Cid и true если есть такая связь
2)POST запрос по надобности вставляющий в табличку UserCategory недостающую запись
//мой вариант решения
для каждй категории лиюо измененной либо если не хочешь логики много писать можешь просто для любой послать пост запрос localhost/UserCategory с внитри лежащим объектом класса UserCategory
+++

Действие: просмотр FAQ
Вход: -
Выход: ArrayList<FAQobject>. FAQobject{String question, String answer}
//
GET запрос на localhost/FAQObject
+++

Действие: добавление нового FAQ
Вход: FAQobject{String question, String answer}
Выход: код ответа 200 внутри лежит вставленный вопрос из фака
//
Post запрос на localhost/FAQObject
в теле запроса в Json формате лежит объект класса FAQObjact
+++

Действие: просмотр новостей // тут нужно задуматься сколько новостей выгружать пользователю. я наугад прикинул,
			что последних 20 будет достаточно. надо рассматривать ситуацию как загружать новости новому 
			пользователю, который зарегистрируется через год, 2?
Вход1: ID последней загруженной на телефоне пользователя новости
Выход1: ArrayList<NewsObject>. список последних 20 новостей. если новых новостей меньше 20, то список 
		соответственно будет меньше
Вход2: - (случай нового пользователя или запроса с вебсайта)
Выход2: ArrayList<NewsObject>

get запрос вернет  записи с from до to  localhost/News/{from}/{to}
+++
get запрос localhost/News/MaxId вернет максимальный айди или нул если нет новостей в бд
+++

Действие: создание новости
Вход: NewsObject
Выход: inserted news object
post запрос по localhost/News с лежащим внутри объектом класса news указывать айди не обязательно он автоматом сгенериттся
+++

Действие: редактирование новости
Вход: int newsID, NewsObject {String title, String author, String message, ?Какой-нибудьКлассКартинки? image}
Выход: int код ответа
post запрос по localhost/News с лежащим внутри объектом класса news обязательно указать айдишник новости
+++

Действие: просмотр вопросов // !!! вот тут я не помню как мы решили вопросы делать, личной перепиской или 
			типа форумом? в зависимости от этого соответственно будут разные входные/выходные данные
Вход: // смотри комментарий действия
Выход: // смотри комментарий действия


Действие: добавление нового вопроса // опять же личная переписка или форум?
Вход: // см. действие
Выход: // см. действие
в контроллере Question вроде все понятно расписано и подходит и для форума и для личной переписки
есть методы для поиска по спрашивающему
найти не отвеченные вопросы для профкомСотрудников
+++

Действие: просмотр документации
Вход: -
Выход: можно сделать статические HTML странички либо же подгружать на сервере данные из Бд
председ же говорила тип пусть ссылки будут так что документация это название и ссылка
все по документации стандартно
localhost/Documentation все записи и так далее в контроллерет все изи
++++++++++

Действие: создание новой документации
Вход: 
Выход: 


Действие: редактирование документации
Вход: 
Выход: 


Действие: просмотр календаря мероприятий
Вход: месяц, по которому вывести мероприятия
Выход: ArrayList<EventObject>


Действие: создание мероприятия
Вход: EventObject
Выход: int код ответа


Действие: редактирование мероприятия
Вход: eventID, EventObject
Выход: int код ответа


Действие: загрузка ежемесячного отчета
Вход: Excel file
Выход: int код ответа


Действие: получение статистики // нужно уточнить у председа как и какую статистику она хочет получать
Вход: //
Выход: //


Действие: внесение информации о выданных плюшках // оставь это напоследок, потому что пока я не знаю как 
			председ будет получать userID
Вход: int userID, String имяПлюшки
Выход: int код ответа


Действие: заполнение табельного номера // оставь это напоследок, потому что пока я не знаю как 
			председ будет получать userID
Вход: int userID, int табельныйНомер
Выход: int код ответа